{"remainingRequest":"/home/bijit/Documents/Suspensian/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/bijit/Documents/Suspensian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bijit/Documents/Suspensian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bijit/Documents/Suspensian/src/components/Navbar.vue?vue&type=template&id=41458b80&scoped=true&","dependencies":[{"path":"/home/bijit/Documents/Suspensian/src/components/Navbar.vue","mtime":1674887395586},{"path":"/home/bijit/Documents/Suspensian/node_modules/cache-loader/dist/cjs.js","mtime":1674897490870},{"path":"/home/bijit/Documents/Suspensian/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1674897311960},{"path":"/home/bijit/Documents/Suspensian/node_modules/cache-loader/dist/cjs.js","mtime":1674897490870},{"path":"/home/bijit/Documents/Suspensian/node_modules/vue-loader/lib/index.js","mtime":1674897311741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}